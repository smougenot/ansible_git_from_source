FROM centos:7
ENV container docker

# systemd enabled container
RUN yum -y update; \
    yum -y install systemd; yum clean all;
RUN for i in $(ls -1 /lib/systemd/system/sysinit.target.wants/); do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done; \
  rm -f /lib/systemd/system/multi-user.target.wants/*;\
  rm -f /etc/systemd/system/*.wants/*;\
  rm -f /lib/systemd/system/local-fs.target.wants/*; \
  rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
  rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
  rm -f /lib/systemd/system/basic.target.wants/*;\
  rm -f /lib/systemd/system/anaconda.target.wants/*;
VOLUME [ "/sys/fs/cgroup", "/run", "/tmp"]
CMD ["/usr/sbin/init"]
#RUN systemctl mask systemd-remount-fs.se rvice dev-hugepages.mount sys-fs-fuse-connections.mount systemd-logind.service getty.target console-getty.service
#RUN cp /usr/lib/systemd/system/dbus.service /etc/systemd/system/; sed -i 's/OOMScoreAdjust=-900//' /etc/systemd/system/dbus.service

# sshd
RUN yum -y install sudo openssh-server; yum clean all; systemctl enable sshd.service;
EXPOSE 22

# disable pam_nologin.so
RUN sed -i 's|\(^.*pam_nologin.so.*$\)|#\1|g' /etc/pam.d/sshd
# Disable requiretty for sudo
RUN sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers

# user for ansible remote access
RUN \
    useradd -m -U -s /bin/bash provisionner && \
    mkdir -p /home/provisionner/.ssh && \
    chown -R provisionner:provisionner /home/provisionner/.ssh && \
    chmod 740 /home/provisionner/.ssh && \
    echo "provisionner ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/provisionner

COPY generated/provisionner.pub /home/provisionner/.ssh/authorized_keys
RUN chmod 500 /home/provisionner/.ssh/authorized_keys && \
    chown provisionner:provisionner /home/provisionner/.ssh/authorized_keys

